// Random retour d'un array
const getRandomItem = (items) =>
  items[Math.floor(Math.random() * items.length)];

// Random number entre 2 valeurs
const getRandomNumber = (min, max) =>
  Math.floor(Math.random() * (max - min + 1) + min);

/**
 * Helper function pour remplacer les caract√®res sp√©ciaux
 * @param {String} string √† modifier
 * @returns
 */
const htmlEntities = function (string) {
  if (!string) return;
  return (
    string
      .replaceAll("√†", "&agrave;")
      .replaceAll("√Ä", "&Agrave;")
      .replaceAll("√¢", "&acirc;")
      .replaceAll("√Ç", "&Acirc;")
      .replaceAll("√§", "&auml;")
      .replaceAll("√Ñ", "&Auml;")
      .replaceAll("√®", "&egrave;")
      .replaceAll("√à", "&Egrave;")
      .replaceAll("√©", "&eacute;")
      .replaceAll("√â", "&Eacute;")
      .replaceAll("√™", "&ecirc;")
      .replaceAll("√ä", "&Ecirc;")
      .replaceAll("√´", "&euml;")
      .replaceAll("√ã", "&Euml;")
      .replaceAll("√Æ", "&icirc;")
      .replaceAll("√é", "&Icirc;")
      .replaceAll("√Ø", "&iuml;")
      .replaceAll("√è", "&Iuml;")
      .replaceAll("√¥", "&ocirc;")
      .replaceAll("√î", "&Ocirc;")
      .replaceAll("√∂", "&ouml;")
      .replaceAll("√ñ", "&Ouml;")
      .replaceAll("√π", "&ugrave;")
      .replaceAll("√ô", "&Ugrave;")
      .replaceAll("√ª", "&ucirc;")
      .replaceAll("√õ", "&Ucirc;")
      .replaceAll("√º", "&uuml;")
      .replaceAll("√ú", "&Uuml;")
      // Caract√®res sp√©ciaux, quotes et apostrophes
      .replaceAll("&amp;nbsp;", "&nbsp;")
      .replaceAll("‚Äú", "&ldquo;")
      .replaceAll("‚Äù", "&rdquo;")
      .replaceAll("‚Äû", "&bdquo;")
      .replaceAll("‚Äò", "'")
      .replaceAll("‚Äò", "'")
      .replaceAll("‚Äô", "'")
      .replaceAll("‚Äö", ",")
      .replaceAll("&rsquo;", "'")
      .replaceAll("&lsquo;", "'")
      .replaceAll("¬´ ", "&laquo;&nbsp;")
      .replaceAll("¬´ ", "&laquo;&nbsp;")
      .replaceAll(" ¬ª", "&nbsp;&raquo;")
      // Espacements ins√©cables
      .replaceAll(" ?", "&nbsp;?")
      .replaceAll(" :", "&nbsp;:")
      .replaceAll(" !", "&nbsp;!")
      .replaceAll(" ;", "&nbsp;;")
      // Variations de tirets
      .replaceAll("-", "-")
      .replaceAll("-", "-")
      .replaceAll("‚Äì", "-")
      .replaceAll("‚Äî", "-")
      .replaceAll("¬≤", "<sup>2</sup>")
      .replaceAll("</p>", "</p>\n")
      .replaceAll("</ul>", "</ul>\n")
      .replaceAll("<li>", "<li>\n")
      .replaceAll("</li>", "</li>\n")
  );
};

/***
 * Helper function pour r√©cup√©rer les dimensions d'un container en ref dans le DOM
 * @param {Variable} refContainer nom du container en ref
 * @returns {Object} dimensions du container (width, height)
 */

const getContainerDimensions = (refContainer) => {
  const containerWidth = refContainer?.value.clientWidth || 0;
  const containerHeight = refContainer?.value.clientHeight || 0;
  // console.log(
  //   "üöÄ ~ Container ~ w: " + containerWidth + " - h: " + containerHeight
  // );

  return { containerWidth, containerHeight };
};

// Viewport dimensions
const getViewportDimensions = () => {
  const viewportWidth = Math.max(
    document.documentElement.clientWidth || 0,
    window.innerWidth || 0
  );
  const viewportHeight = Math.max(
    document.documentElement.clientHeight || 0,
    window.innerHeight || 0
  );
  // console.log(
  //   "üöÄ ~ Viewport ~ w: " + viewportWidth + " - h: " + viewportHeight
  // );

  return { viewportWidth, viewportHeight };
};

export {
  getRandomItem,
  getRandomNumber,
  htmlEntities,
  getContainerDimensions,
  getViewportDimensions,
};
